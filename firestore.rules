rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isStudent() {
      return getUserRole(request.auth.uid) == 'student';
    }

    function isTeacher() {
      return getUserRole(request.auth.uid) in ['teacher', 'admin', 'superadmin'];
    }

    function isAdmin() {
      return getUserRole(request.auth.uid) in ['admin', 'superadmin'];
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isTeacher() || isAdmin();
      allow write: if isOwner(userId) || isAdmin();

      match /quizHistory/{docId} {
        allow read: if isOwner(userId) || isTeacher();
        allow write: if isOwner(userId);
      }
      match /assignmentAttempts/{docId} {
        allow read: if isOwner(userId) || isTeacher();
        allow write: if isOwner(userId);
      }
      match /chats/{chatId} {
        allow read, write, delete: if isOwner(userId);
        match /messages/{messageId} {
          allow read, write, delete: if isOwner(userId);
        }
      }
    }

    match /classes/{classId} {
      allow read: if isTeacher();
      allow create, update, delete: if isTeacher() && request.resource.data.teacherId == request.auth.uid;
    }

    match /assignments/{assignmentId} {
      allow read: if isTeacher() || (isStudent() && resource.data.assignedClasses[?request.auth.token.classId in @.path.classId].size() > 0);
      allow create, update, delete: if isTeacher() && request.resource.data.teacherId == request.auth.uid;
    }
    
    match /feedback/{feedbackId} {
      allow read: if isOwner(resource.data.studentId) || isOwner(resource.data.teacherId);
      allow create: if isTeacher();
      allow update: if isOwner(resource.data.studentId) && request.resource.data.isRead == true;
      allow delete: if isOwner(resource.data.teacherId);
    }
  }
}

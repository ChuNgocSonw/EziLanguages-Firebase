rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isStudent() {
      return isSignedIn() && getUserRole() == 'student';
    }

    function isTeacher() {
      return isSignedIn() && (getUserRole() == 'teacher' || isAdmin());
    }

    function isAdmin() {
      return isSignedIn() && (getUserRole() == 'admin' || getUserRole() == 'superadmin');
    }
    
    // Admin/Super Admin have full access to everything.
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Leaderboard access - Allow any signed-in user to list users for ranking purposes.
    match /users/{userId} {
       allow list: if isSignedIn();
    }

    // Users can only read/write their own data. Teachers/Admins can read any user's profile.
    match /users/{userId} {
      allow read: if isSignedIn() && (
        isOwner(userId) || isTeacher()
      );
      allow write: if isSignedIn() && isOwner(userId);
    }
    
    // Classes can be read by any signed-in user (for student class lookup), but only written by the teacher owner.
    match /classes/{classId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isTeacher() && resource.data.teacherId == request.auth.uid;
    }
    
    // Assignments can be read by students in the assigned class, but only written by the teacher owner.
    match /assignments/{assignmentId} {
      allow read: if (isStudent() && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId in 
                      get(/databases/$(database)/documents/classes/$(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId)).data.studentIds &&
                      { 'classId': get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId, 
                        'className': get(/databases/$(database)/documents/classes/$(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId)).data.className 
                      } in resource.data.assignedClasses)
                   || (isTeacher() && resource.data.teacherId == request.auth.uid);

      allow create, update, delete: if isTeacher() && request.resource.data.teacherId == request.auth.uid;
    }
    
    // Students can read feedback addressed to them. Teachers can read feedback they sent.
    // Teachers can write/delete feedback. Students can only update the 'isRead' status.
    match /feedback/{docId} {
      allow read, delete: if (isStudent() && resource.data.studentId == request.auth.uid) || 
                          (isTeacher() && resource.data.teacherId == request.auth.uid);

      allow create: if isTeacher() && request.resource.data.teacherId == request.auth.uid;
      
      allow update: if isTeacher() && resource.data.teacherId == request.auth.uid;
      
      allow update: if isStudent() && resource.data.studentId == request.auth.uid
                      && request.resource.data.isRead == true
                      && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isRead']);
    }

    // Quiz History and Assignment Attempts are private to each user.
    match /users/{userId}/{collection}/{docId} {
       allow read, write: if isSignedIn() && isOwner(userId);
    }
  }
}

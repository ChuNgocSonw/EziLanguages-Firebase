rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    allow read: if resource.data.privacy == 'public';
    // Grant public read access to the 'users' collection for leaderboards,
    // but restrict writes to the user who owns the document.
    match /users/{userId} {
      // Allow authenticated users to read the list of users for leaderboards.
      allow list: if request.auth != null;
      
      // Allow users to read their own profile, create a new one, 
      // and update their own data.
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;

      // Rules for the 'chats' subcollection.
      // Allow a user to manage their own chat sessions.
      match /chats/{chatId} {
        allow read, create, delete: if request.auth != null && request.auth.uid == userId;

        // Rules for the 'messages' sub-subcollection.
        // Allow a user to read, create, and delete messages within their own chat session.
        match /messages/{messageId} {
          allow read, create, delete: if request.auth != null && request.auth.uid == userId;
        }
      }

      // Rules for the 'quizHistory' subcollection.
      // Allow a user to read and create their own quiz attempts.
      match /quizHistory/{quizId} {
        allow read, create: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Rules for the 'classes' collection.
    match /classes/{classId} {
      // Any authenticated user can read class information.
      allow read: if request.auth != null;
      
      // Only users with 'teacher' or 'admin' role can create a class.
      allow create: if request.auth != null 
                    && request.resource.data.teacherId == request.auth.uid
                    && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher' 
                        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // Only the teacher who owns the class can update or delete it.
      allow update, delete: if request.auth != null && resource.data.teacherId == request.auth.uid;
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isStudent() {
      return isSignedIn() && getUserRole(request.auth.uid) == 'student';
    }

    function isTeacher() {
      return isSignedIn() && getUserRole(request.auth.uid) in ['teacher', 'admin', 'superadmin'];
    }

    function isAdmin() {
      return isSignedIn() && getUserRole(request.auth.uid) in ['admin', 'superadmin'];
    }

    match /users/{userId} {
      allow read, list: if isSignedIn();
      allow write: if isOwner(userId) || isAdmin();
    }

    match /classes/{classId} {
      allow get: if isSignedIn();
      allow list: if isTeacher();
      allow create: if isTeacher();
      allow update, delete: if isTeacher() && resource.data.teacherId == request.auth.uid;
    }

    match /assignments/{assignmentId} {
      allow create, update, delete: if isTeacher() && request.resource.data.teacherId == request.auth.uid;
      allow get: if isSignedIn();
      allow list: if isTeacher();
    }

    match /feedback/{docId} {
      allow create: if isTeacher();
      allow delete: if isTeacher() && resource.data.teacherId == request.auth.uid;
      
      // Allow read for the specific teacher or student
      allow get: if (isTeacher() && resource.data.teacherId == request.auth.uid) || (isStudent() && resource.data.studentId == request.auth.uid);
      
      // Allow teacher to list their sent feedback
      allow list: if isTeacher();
      
      // Allow student to update isRead flag only
      allow update: if isStudent() && resource.data.studentId == request.auth.uid 
                      && request.resource.data.isRead == true
                      && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isRead']);
    }

    match /{path=**}/assignmentAttempts/{attemptId} {
        allow read, write: if isOwner(path[1]);
    }
    
    match /{path=**}/quizHistory/{quizId} {
        allow read, write: if isOwner(path[1]);
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isStudent() {
      return isSignedIn() && getUserData(request.auth.uid).role == 'student';
    }

    function isTeacher() {
      return isSignedIn() && getUserData(request.auth.uid).role in ['teacher', 'admin', 'superadmin'];
    }

    function isAdmin() {
      return isSignedIn() && getUserData(request.auth.uid).role in ['admin', 'superadmin'];
    }
    
    // Default deny all for safety
    match /{document=**} {
      allow read, write: if false;
    }

    // Users Collection
    match /users/{userId} {
      allow read: if isTeacher() || request.auth.uid == userId;
      allow create: if isSignedIn();
      allow update: if isTeacher() || request.auth.uid == userId;
      allow list: if isSignedIn(); // For leaderboard
    }

    // Classes Collection
    match /classes/{classId} {
      allow read, write: if isTeacher();
    }

    // Assignments Collection
    match /assignments/{assignmentId} {
      allow write: if isTeacher();
      // Teachers can read. Students can read if the assignment is for their class.
      allow read: if isTeacher() || 
                    (isStudent() && {
                      'classId': getUserData(request.auth.uid).classId, 
                      'className': get(/databases/$(database)/documents/classes/$(getUserData(request.auth.uid).classId)).data.className
                    } in resource.data.assignedClasses);
    }

    // Feedback Collection
    match /feedback/{feedbackId} {
      allow read, delete: if (isTeacher() && resource.data.teacherId == request.auth.uid) || (isStudent() && resource.data.studentId == request.auth.uid);
      allow create: if isTeacher();
      // Allow student to update ONLY the isRead field to true
      allow update: if isStudent() 
                    && request.auth.uid == resource.data.studentId 
                    && request.resource.data.isRead == true
                    && resource.data.diff(request.resource.data).affectedKeys().hasOnly(['isRead']);
    }
    
    // Allow teachers to list their sent feedback
    match /feedback/{path=**} {
       allow list: if isTeacher();
    }
    
    // Quiz History & Assignment Attempts Subcollections
    match /users/{userId}/{subcollection}/{attemptId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Chats Subcollection
    match /users/{userId}/chats/{chatId} {
        allow read, write, delete: if request.auth.uid == userId;
    }
    match /users/{userId}/chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth.uid == userId;
    }
  }
}

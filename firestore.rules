rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function getUserRole() {
      return getUserData().role;
    }
    
    function isAdmin() {
      return isSignedIn() && (getUserRole() == 'admin' || getUserRole() == 'superadmin');
    }
    
    function isTeacher() {
      return isSignedIn() && getUserRole() == 'teacher';
    }
    
    function isStudent() {
      return isSignedIn() && getUserRole() == 'student';
    }

    // Admin/Super Admin have global access
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Users Collection Rules
    match /users/{userId} {
      // Users can read/update their own profile.
      allow read, update: if isSignedIn() && isOwner(userId);
      // Teachers can read student profiles.
      allow read: if isTeacher();
    }
    
    // Classes Collection Rules
    match /classes/{classId} {
      // Teachers can create, read, update, delete classes they own.
      allow read, update, delete: if isTeacher() && resource.data.teacherId == request.auth.uid;
      allow create: if isTeacher();
      
      // Students can read details of the class they are in.
      allow read: if isStudent() && resource.data.studentIds[0] is string && request.auth.uid in resource.data.studentIds;
    }
    
    // Assignments Collection Rules
    match /assignments/{assignmentId} {
      // Teachers can manage assignments they own.
      allow read, create, update, delete: if isTeacher();
      
      // Students can read assignments assigned to their class.
      allow read: if isStudent() && exists(/databases/$(database)/documents/assignments/$(assignmentId)/students/$(request.auth.uid));
    }

    // Feedback Collection Rules
    match /feedback/{feedbackId} {
      // Teachers can create and delete feedback they sent.
      allow create: if isTeacher();
      allow delete: if isTeacher() && resource.data.teacherId == request.auth.uid;
      
      // Teachers can read (list) feedback they have sent.
      allow list: if isTeacher();
      
      // Students can read and update (mark as read) feedback they received.
      allow read, update: if isStudent() && resource.data.studentId == request.auth.uid;
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =================================
    // Helper Functions
    // =================================
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function getRequestingUserRole() {
      return getUserData(request.auth.uid).role;
    }

    function isAdmin() {
      let role = getRequestingUserRole();
      return role == 'admin' || role == 'superadmin';
    }
    
    function isTeacher() {
      return getRequestingUserRole() == 'teacher';
    }
    
    // Checks if the requesting user is the teacher of the student being accessed.
    function isTeacherOfStudent(studentUserId) {
      let studentData = getUserData(studentUserId);
      if (!('classId' in studentData)) {
        return false;
      }
      let classId = studentData.classId;
      let classData = get(/databases/$(database)/documents/classes/$(classId)).data;
      return classData.teacherId == request.auth.uid;
    }
    
    // Checks if an assignment is assigned to the requesting student's class
    function isAssignedToStudent(assignment) {
      let studentData = getUserData(request.auth.uid);
      if (!('classId' in studentData) || !('assignedClasses' in assignment.data)) {
        return false;
      }
      // Check if any of the assigned classes match the student's classId
      return assignment.data.assignedClasses.exists(c => c.classId == studentData.classId);
    }
    
    // =================================
    // Collection Rules
    // =================================
    
    // Users Collection
    match /users/{userId} {
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin() || isTeacherOfStudent(userId));
      allow write: if isSignedIn() && (isOwner(userId) || isAdmin());
    }

    // Classes Collection
    match /classes/{classId} {
      allow read, write: if isSignedIn() && (isTeacher() || isAdmin());
    }
    
    // Assignments Collection
    match /assignments/{assignmentId} {
      allow read: if isSignedIn() && (isTeacher() || isAdmin() || isAssignedToStudent(resource));
      allow write: if isSignedIn() && (isTeacher() || isAdmin());
    }
    
    // Lessons Collection
    match /lessons/{lessonId} {
      allow read: if isSignedIn(); // All signed-in users can read lessons
      allow create, update, delete: if isSignedIn() && isAdmin(); // Only admins can manage lessons
    }

    // Feedback Collection
    match /feedback/{feedbackId} {
        allow read, create, update, delete: if isSignedIn() && 
            (isAdmin() || 
            (isTeacher() && resource.data.teacherId == request.auth.uid) ||
            (resource.data.studentId == request.auth.uid));
    }
    
    // Subcollections for users
    match /users/{userId}/{collection}/{docId} {
        allow read, write: if isSignedIn() && isOwner(userId);
    }
  }
}

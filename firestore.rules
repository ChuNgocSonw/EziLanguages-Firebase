rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin.
    // This is safe because it only reads the user's own role.
    function isRequestingUserAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
          || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Helper function to check if the requesting user is a teacher.
    function isRequestingUserTeacher() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher'
          || isRequestingUserAdmin(); // Admins have teacher permissions
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // READ:
      // 1. A user can read their own document.
      // 2. A teacher can read any user's document.
      allow read: if request.auth.uid == userId || isRequestingUserTeacher();

      // WRITE:
      // 1. A user can update their own document.
      // 2. An admin can update any user's document.
      allow write: if request.auth.uid == userId || isRequestingUserAdmin();

      // Rules for user subcollections (quizHistory, assignmentAttempts)
      match /{subcollection}/{docId} {
        // READ:
        // 1. A user can read documents in their own subcollections.
        // 2. A teacher can read documents in any user's subcollections.
        allow read: if request.auth.uid == userId || isRequestingUserTeacher();

        // WRITE:
        // 1. A user can write to their own subcollections.
        allow write: if request.auth.uid == userId;
      }
    }

    // Rules for the 'classes' collection
    match /classes/{classId} {
      // READ: Anyone authenticated can read class lists.
      allow read: if request.auth != null;

      // CREATE, UPDATE, DELETE: Only teachers can manage classes.
      allow write: if isRequestingUserTeacher();
    }

    // Rules for the 'assignments' collection
    match /assignments/{assignmentId} {
      // READ: Anyone authenticated can read assignments.
      allow read: if request.auth != null;

      // CREATE, UPDATE, DELETE: Only teachers can manage assignments.
      allow write: if isRequestingUserTeacher();
    }
    
    // Rules for the 'feedback' collection
    match /feedback/{feedbackId} {
        // READ: 
        // 1. A teacher can read feedback they sent.
        // 2. A student can read feedback they received.
        allow read: if (isRequestingUserTeacher() && resource.data.teacherId == request.auth.uid)
                      || resource.data.studentId == request.auth.uid;
                      
        // CREATE: Only teachers can create feedback.
        allow create: if isRequestingUserTeacher();
        
        // UPDATE: Students can update feedback (to mark as read).
        allow update: if resource.data.studentId == request.auth.uid;
        
        // DELETE: Only teachers who sent the feedback can delete it.
        allow delete: if isRequestingUserTeacher() && resource.data.teacherId == request.auth.uid;
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isAdmin() {
      return isAuth() && getUserRole(request.auth.uid) in ['admin', 'superadmin'];
    }

    function isTeacher() {
      return isAuth() && getUserRole(request.auth.uid) == 'teacher';
    }
    
    function isTeacherOfStudent(studentId) {
      let studentData = get(/databases/$(database)/documents/users/$(studentId)).data;
      // Check if the teacher making the request is the owner of the student's class
      return isTeacher() && studentData.classId != null && get(/databases/$(database)/documents/classes/$(studentData.classId)).data.teacherId == request.auth.uid;
    }

    // RULES
    match /users/{userId} {
      // Allow read if user is the owner, an admin, or the student's teacher
      allow read: if isOwner(userId) || isAdmin() || isTeacherOfStudent(userId);
      // Allow write only if user is the owner or an admin
      allow write: if isOwner(userId) || isAdmin();

      // Rules for subcollections like quizHistory, chats, etc.
      match /{subcollection}/{docId} {
        allow read, write: if isOwner(userId);
      }
    }

    match /classes/{classId} {
      let classData = get(/databases/$(database)/documents/classes/$(classId)).data;
      // Allow read/write if user is the teacher owner of the class or an admin
      allow read, write: if (isTeacher() && classData.teacherId == request.auth.uid) || isAdmin();
    }
    
    match /lessons/{lessonId} {
      // Allow any authenticated user (student, teacher, admin) to read lesson content
      allow read: if isAuth();
      // Only admins can create, update, or delete lessons
      allow write: if isAdmin();
    }

    match /assignments/{assignmentId} {
      let assignment = get(/databases/$(database)/documents/assignments/$(assignmentId)).data;
      // Any authenticated user can read assignments (students need this for their assigned work)
      allow read: if isAuth();
      // Only teachers and admins can create assignments
      allow create: if isTeacher() || isAdmin();
      // Only the teacher who created the assignment or an admin can update/delete it
      allow update, delete: if (isTeacher() && assignment.teacherId == request.auth.uid) || isAdmin();
    }

    match /feedback/{feedbackId} {
      let feedback = get(/databases/$(database)/documents/feedback/$(feedbackId)).data;
      // Teachers and admins can create feedback
      allow create: if isTeacher() || isAdmin();
      // Read allowed for the sender (teacher), receiver (student), or admin
      allow read: if (feedback.teacherId == request.auth.uid) || (feedback.studentId == request.auth.uid) || isAdmin();
      // Student can mark as read, teacher can't change it after sending
      allow update: if isOwner(feedback.studentId);
      // Only the sending teacher or an admin can delete feedback
      allow delete: if isOwner(feedback.teacherId) || isAdmin();
    }
  }
}

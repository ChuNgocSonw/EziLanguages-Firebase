rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isStudent() {
      return isSignedIn() && getUserRole() == 'student';
    }

    function isTeacher() {
      return isSignedIn() && getUserRole() == 'teacher';
    }

    function isAdmin() {
      return isSignedIn() && (getUserRole() == 'admin' || getUserRole() == 'superadmin');
    }

    // Admin/Superadmin have full access to everything. This rule must come first.
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isSignedIn();
      allow update: if isOwner(userId);
    }

    // Classes collection rules
    match /classes/{classId} {
      allow read: if isTeacher();
      allow create, update, delete: if isTeacher() && request.resource.data.teacherId == request.auth.uid;
    }

    // Assignments collection rules
    match /assignments/{assignmentId} {
      allow read: if isTeacher() || 
        (isStudent() && 
          { 
            'classId': get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId, 
            'className': get(/databases/$(database)/documents/classes/$(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId)).data.className 
          } in resource.data.assignedClasses
        );
      allow create, update, delete: if isTeacher() && request.resource.data.teacherId == request.auth.uid;
    }

    // Feedback collection rules
    match /feedback/{feedbackId} {
      allow read: if (isTeacher() && resource.data.teacherId == request.auth.uid) || (isStudent() && resource.data.studentId == request.auth.uid);
      allow create: if isTeacher() && request.resource.data.teacherId == request.auth.uid;
      allow delete: if isTeacher() && resource.data.teacherId == request.auth.uid;
      allow update: if isStudent() && request.resource.data.isRead == true; // Students can only mark as read
    }
    
    // Subcollections (quizHistory, assignmentAttempts, chats)
    match /users/{userId}/{collection}/{docId} {
      allow read, write: if isOwner(userId);
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isStudent() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    function isTeacher() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin', 'superadmin'];
    }

    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // Default deny all - this should be the first rule
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Global Admin/Superadmin access - this overrides all other rules for them
    match /{document=**} {
        allow read, write: if isAdmin();
    }

    // Users Collection
    match /users/{userId} {
      // Teachers and Admins can read any user profile. A user can read their own.
      allow read: if isTeacher() || request.auth.uid == userId;
      // Anyone can create their own user document (sign up)
      allow create: if isSignedIn();
      // A user can update their own profile, OR a teacher can update any user's profile (e.g., to add a classId)
      allow update: if request.auth.uid == userId || isTeacher();
      // Allow any signed-in user to list users for features like leaderboards
      allow list: if isSignedIn();
    }

    // Classes Collection
    match /classes/{classId} {
      allow read, write: if isTeacher();
    }

    // Assignments Collection
    match /assignments/{assignmentId} {
      allow read: if isTeacher() || (isStudent() && 
          size(resource.data.assignedClasses.filter(c => c.classId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId)) > 0);
      allow write: if isTeacher();
    }

    // Feedback Collection
    match /feedback/{feedbackId} {
      allow read, delete: if (isTeacher() && resource.data.teacherId == request.auth.uid) || (isStudent() && resource.data.studentId == request.auth.uid);
      allow create: if isTeacher();
      // Allow student to only mark feedback as read
      allow update: if isStudent() && request.auth.uid == resource.data.studentId && request.resource.data.isRead == true && resource.data.diff(request.resource.data).affectedKeys().hasOnly(['isRead']);
    }
    
    // Allow teachers to list their sent feedback. Student can list their received feedback.
    match /feedback/{feedbackId=**} {
       allow list: if isSignedIn();
    }
    
    // Quiz History & Assignment Attempts Subcollections
    match /users/{userId}/{subcollection}/{attemptId} {
      // This covers quizHistory and assignmentAttempts
      allow read, write: if request.auth.uid == userId;
    }

    // Chats Subcollection
    match /users/{userId}/chats/{chatId} {
        allow read, write, delete: if request.auth.uid == userId;
    }
    match /users/{userId}/chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth.uid == userId;
    }
  }
}

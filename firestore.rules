rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isStudent() {
      let userData = getUserData(request.auth.uid);
      return isSignedIn() && userData.role == 'student';
    }

    function isTeacher() {
      let userData = getUserData(request.auth.uid);
      return isSignedIn() && (userData.role == 'teacher' || userData.role == 'admin' || userData.role == 'superadmin');
    }

    function isAdmin() {
      let userData = getUserData(request.auth.uid);
      return isSignedIn() && (userData.role == 'admin' || userData.role == 'superadmin');
    }

    // Collection: users
    match /users/{userId} {
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isOwner(userId) || isTeacher()); // Teacher can update classId
      allow write: if isAdmin();

      // Sub-collections for student performance data
      match /quizHistory/{docId} {
        allow read: if isOwner(userId) || isTeacher();
        allow create: if isOwner(userId);
        allow write: if isAdmin();
      }

      match /assignmentAttempts/{docId} {
        allow read: if isOwner(userId) || isTeacher();
        allow create: if isOwner(userId);
        allow write: if isAdmin();
      }
      
      // Allow teacher to list sub-collections for feedback generation
      match /quizHistory/{docId=**} {
        allow list: if isTeacher();
      }
      
      match /assignmentAttempts/{docId=**} {
        allow list: if isTeacher();
      }

      match /chats/{chatId} {
        allow read, write: if isOwner(userId);
        match /messages/{messageId} {
          allow read, write: if isOwner(userId);
        }
      }
    }

    // Collection: classes
    match /classes/{classId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isTeacher();
    }

    // Collection: assignments
    match /assignments/{assignmentId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isTeacher();
    }
    
    // Collection: feedback
    match /feedback/{feedbackId} {
      allow read: if isSignedIn() && (request.auth.uid == resource.data.studentId || request.auth.uid == resource.data.teacherId);
      allow create: if isTeacher();
      allow update: if request.auth.uid == resource.data.studentId; // Student can mark as read
      allow delete: if isTeacher() && request.auth.uid == resource.data.teacherId;
    }
  }
}

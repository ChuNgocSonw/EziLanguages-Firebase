rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isStudent() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    function isTeacher() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin', 'superadmin'];
    }

    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }
    
    // Default deny all for security
    match /{document=**} {
      allow read, write: if false;
    }

    // Users Collection
    match /users/{userId} {
      allow read: if isAdmin() || request.auth.uid == userId;
      allow create: if isSignedIn();
      allow update: if request.auth.uid == userId;
      allow list: if isSignedIn(); // For leaderboard
    }

    // Classes Collection
    match /classes/{classId} {
      allow read, write: if isTeacher();
    }

    // Assignments Collection
    match /assignments/{assignmentId} {
       // Teachers can read any assignment.
       // Students can read an assignment IF its assignedClasses array contains an object that matches the student's classId and className.
       allow read: if isTeacher() || (isStudent() && {
           'classId': get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId,
           'className': get(/databases/$(database)/documents/classes/$(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId)).data.className
           } in resource.data.assignedClasses);
      allow write: if isTeacher();
    }

    // Feedback Collection - Handles individual document access
    match /feedback/{feedbackId} {
      allow get, delete: if (isTeacher() && resource.data.teacherId == request.auth.uid) || (isStudent() && resource.data.studentId == request.auth.uid);
      allow create: if isTeacher();
      // Students can only update the isRead flag to true, and nothing else.
      allow update: if isStudent() && request.auth.uid == resource.data.studentId && request.resource.data.isRead == true && resource.data.diff(request.resource.data).affectedKeys().hasOnly(['isRead']);
    }
    
    // This rule specifically allows teachers to perform the list query needed for "Sent History"
    match /feedback/{document=**} {
        allow list: if isTeacher();
    }
    
    // Subcollections for quiz/assignment history
    match /users/{userId}/{subcollection}/{attemptId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Subcollections for chat
    match /users/{userId}/chats/{chatId} {
        allow read, write, delete: if request.auth.uid == userId;
    }
    match /users/{userId}/chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth.uid == userId;
    }
  }
}

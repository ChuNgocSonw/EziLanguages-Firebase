rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    function isStudent() {
      return getUserRole() == 'student';
    }
    
    function isTeacher() {
      let role = getUserRole();
      return role == 'teacher' || role == 'admin' || role == 'superadmin';
    }

    function isAdmin() {
      let role = getUserRole();
      return role == 'admin' || role == 'superadmin';
    }
    
    // Rules for 'users' collection
    match /users/{userId} {
      // Users can read their own profile
      // Admins/Superadmins can read any user profile
      allow read: if isOwner(userId) || isAdmin();
      // Users can create their own profile upon signup
      allow create: if request.auth != null;
      // Users can update their own profile data
      // Admins/Superadmins can update any user's role
      allow update: if isOwner(userId) || isAdmin();
    }
    
    // Rules for 'classes' collection
    match /classes/{classId} {
      // Teachers can read classes they own
      // Students can read the class they belong to
      allow read: if isOwner(resource.data.teacherId) || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId == classId;
      // Teachers can create classes
      allow create: if isTeacher();
      // Only the teacher who owns the class can update or delete it
      allow update, delete: if isOwner(resource.data.teacherId);
    }
    
    // Rules for 'assignments' collection
    match /assignments/{assignmentId} {
      // Teachers can read assignments they created
      // Students can read assignments assigned to their class
      allow read: if isOwner(resource.data.teacherId) || 
                      (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId in resource.data.assignedClasses.map(c => c.classId));
      // Teachers can create, update, and delete assignments
      allow write: if isTeacher();
    }

    // Rules for 'feedback' collection
    match /feedback/{feedbackId} {
        allow read: if isOwner(resource.data.studentId) || isOwner(resource.data.teacherId);
        allow create: if isTeacher();
        allow delete: if isOwner(resource.data.teacherId);
    }
    
    match /feedback/{document=**} {
        // This rule allows a teacher to query for the feedback they have sent.
        // The query from the client MUST include `where("teacherId", "==", request.auth.uid)`.
        allow list: if isTeacher() && request.query.resource.data.teacherId == request.auth.uid;
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isStudent() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    function isTeacher() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin', 'superadmin'];
    }

    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // Default deny all for safety, specific rules will override
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // Users Collection
    match /users/{userId} {
      // Teachers need to read student profiles to add them to classes. Admins or the user themselves can also read.
      allow read: if isTeacher() || request.auth.uid == userId;
      allow create: if isSignedIn();
      // Teachers need to update a student's classId. Users can update their own profile.
      allow update: if isTeacher() || request.auth.uid == userId;
      // Allow any signed-in user to list users for features like leaderboards.
      allow list: if isSignedIn();
    }

    // Classes Collection
    match /classes/{classId} {
      // Only teachers can manage classes.
      allow read, write: if isTeacher();
    }

    // Assignments Collection
    match /assignments/{assignmentId} {
      // Teachers can read all assignments. Students can only read assignments assigned to their class.
      allow read: if isTeacher() || (isStudent() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId in resource.data.assignedClasses.map(c => c.classId));
      allow write: if isTeacher();
    }

    // Feedback Collection
    match /feedback/{feedbackId} {
      allow read, delete: if (isTeacher() && resource.data.teacherId == request.auth.uid) || (isStudent() && resource.data.studentId == request.auth.uid);
      allow create: if isTeacher();
      // Students can only update the isRead flag and nothing else.
      allow update: if isStudent() && request.auth.uid == resource.data.studentId 
                      && request.resource.data.isRead == true 
                      && resource.data.diff(request.resource.data).affectedKeys().hasOnly(['isRead']);
    }
    
    // Allow teachers and students to list relevant feedback.
    match /feedback/{feedbackId=**} {
       allow list: if isTeacher() || isStudent();
    }
    
    // Subcollections for quiz/assignment history
    match /users/{userId}/{subcollection}/{attemptId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Subcollections for chat
    match /users/{userId}/chats/{chatId} {
        allow read, write, delete: if request.auth.uid == userId;
    }
    match /users/{userId}/chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth.uid == userId;
    }
  }
}

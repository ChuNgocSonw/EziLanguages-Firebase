
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isStudent() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    function isTeacher() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin', 'superadmin'];
    }

    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isTeacherOfStudent(studentId) {
      let studentDoc = get(/databases/$(database)/documents/users/$(studentId)).data;
      return isTeacher() && studentDoc.classId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classIds;
    }

    match /users/{userId} {
      allow read, write: if isSignedIn() && isOwner(userId) || isAdmin();
      allow list: if isAdmin();
    }

    match /classes/{classId} {
        allow read: if isTeacher() && resource.data.teacherId == request.auth.uid || isStudent() && resource.id == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId;
        allow create, update, delete: if isTeacher() && request.resource.data.teacherId == request.auth.uid;
        allow list: if isTeacher();
    }

    match /assignments/{assignmentId} {
      allow read: if isTeacher() && resource.data.teacherId == request.auth.uid || isStudent() && { 'classId': get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId, 'className': get(/databases/$(database)/documents/classes/$(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId)).data.className } in resource.data.assignedClasses;
      allow create, update, delete: if isTeacher() && request.resource.data.teacherId == request.auth.uid;
      allow list: if isTeacher();
    }
    
    match /feedback/{feedbackId} {
      allow read: if (isStudent() && resource.data.studentId == request.auth.uid) || (isTeacher() && resource.data.teacherId == request.auth.uid);
      allow list: if isTeacher();
      allow create: if isTeacher();
      allow delete: if isTeacher() && resource.data.teacherId == request.auth.uid;
    }
  }
}

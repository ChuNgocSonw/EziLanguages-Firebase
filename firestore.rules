rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================================================
    // Functions
    // =================================================================
    function getRequestingUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function getRequestingUserRole() {
      return getRequestingUserData().role;
    }
    
    function isTeacherOfStudent(studentId) {
      let studentClassId = get(/databases/$(database)/documents/users/$(studentId)).data.classId;
      return studentClassId != null &&
             get(/databases/$(database)/documents/classes/$(studentClassId)).data.teacherId == request.auth.uid;
    }
    
    // =================================================================
    // User Profiles
    // =================================================================
    match /users/{userId} {
      allow list: if request.auth != null;
      allow read, write: if request.auth.uid == userId;
      // Admins can read any user profile
      allow read: if getRequestingUserRole() in ['admin', 'superadmin'];
      // Teachers can read profiles of students in their classes
      allow read: if getRequestingUserRole() == 'teacher' && isTeacherOfStudent(userId);
    }
    
    // =================================================================
    // User-specific Subcollections
    // =================================================================
    match /users/{userId}/{collection}/{docId} {
        allow read, write, delete: if request.auth.uid == userId;
    }

    match /users/{userId}/assignmentAttempts/{attemptId} {
        allow read: if getRequestingUserRole() == 'teacher' && isTeacherOfStudent(userId);
    }
    
    // =================================================================
    // Classes
    // =================================================================
    match /classes/{classId} {
        allow create: if getRequestingUserRole() in ['teacher', 'admin', 'superadmin'];
        allow read, write, delete: if resource.data.teacherId == request.auth.uid;
    }

    // =================================================================
    // Assignments
    // =================================================================
    match /assignments/{assignmentId} {
      allow create: if getRequestingUserRole() in ['teacher', 'admin', 'superadmin'];
      allow read, write, delete: if resource.data.teacherId == request.auth.uid;
      // Students can read assignments assigned to their class
      allow read: if getRequestingUserData().role == 'student' &&
                     (getRequestingUserData().classId in resource.data.assignedClasses.map(c => c.classId));
    }
    
    // =================================================================
    // Feedback
    // =================================================================
    match /feedback/{feedbackId} {
      // Student can read/update feedback sent to them
      allow read, update: if resource.data.studentId == request.auth.uid;
      // Teacher can create/read/delete feedback they sent
      allow create, read, delete: if resource.data.teacherId == request.auth.uid;
    }
    
    match /feedback/{document=**} {
      // Teachers can list the feedback they have sent
      allow list: if getRequestingUserRole() in ['teacher', 'admin', 'superadmin'];
    }
  }
}

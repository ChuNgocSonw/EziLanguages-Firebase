rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isTeacher(uid) {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(uid)).data.role in ['teacher', 'admin', 'superadmin'];
    }

    function isAdmin(uid) {
        return isSignedIn() && get(/databases/$(database)/documents/users/$(uid)).data.role in ['admin', 'superadmin'];
    }

    // Admins can do anything - This is a broad rule for simplicity.
    // In a production environment, you might want more granular admin rules.
    match /{path=**} {
        allow read, write: if isAdmin(request.auth.uid);
    }

    match /users/{userId} {
      // Users can fully manage their own document.
      allow read, update, delete: if isSignedIn() && request.auth.uid == userId;
      // Any signed-in user can create their own user document during signup.
      allow create: if isSignedIn() && request.auth.uid == userId;

      // Teachers can get individual student documents (needed for class lists, etc.)
      allow get: if isTeacher(request.auth.uid);

      match /quizHistory/{quizId} {
        // Students can manage their own quiz history.
        allow read, write: if isSignedIn() && request.auth.uid == userId;
        // Teachers can read (get and list) student's quiz history for feedback.
        allow read: if isTeacher(request.auth.uid);
      }

      match /assignmentAttempts/{attemptId} {
        // Students can manage their own assignment attempts.
        allow read, write: if isSignedIn() && request.auth.uid == userId;
        // Teachers can read (get and list) student's assignment attempts for feedback.
        allow read: if isTeacher(request.auth.uid);
      }
    }

    match /classes/{classId} {
        // A teacher can create, read, update, or delete a class they own.
        allow read, delete, update: if isSignedIn() && resource.data.teacherId == request.auth.uid;
        allow create: if isTeacher(request.auth.uid);
    }

    match /assignments/{assignmentId} {
        // A teacher can manage assignments they own.
        allow read, delete, update: if isSignedIn() && resource.data.teacherId == request.auth.uid;
        allow create: if isTeacher(request.auth.uid);
        // Students can read assignments.
        allow read: if isSignedIn();
    }
    
    match /feedback/{feedbackId} {
        // Teachers can create feedback.
        allow create: if isTeacher(request.auth.uid);
        // Teachers can read and delete feedback they sent.
        allow read, delete: if isSignedIn() && resource.data.teacherId == request.auth.uid;
        // Students can read and update (to mark as read) feedback they received.
        allow read, update: if isSignedIn() && resource.data.studentId == request.auth.uid;
    }
  }
}
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read their own profile, admins/superadmins can read any profile.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin']);
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Teachers can manage their own classes.
    match /classes/{classId} {
        allow read, write, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin', 'superadmin'];
    }
    
    // Admins can manage lesson content. Anyone can read.
    match /lessons/{lessonId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // Students can read/write their own chat history.
    match /users/{userId}/chats/{chatId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
     match /users/{userId}/chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Students can write to their own quiz history, but not edit/delete.
    match /users/{userId}/quizHistory/{attemptId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Students can write to their own assignment attempts, but not edit/delete.
    match /users/{userId}/assignmentAttempts/{attemptId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Teachers can manage assignments.
    match /assignments/{assignmentId} {
        allow read, write, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin', 'superadmin'];
    }

    // Feedback can be read by sender/receiver, but only created/deleted by teachers.
    match /feedback/{feedbackId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.studentId || request.auth.uid == resource.data.teacherId);
      allow create, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin', 'superadmin'];
      allow update: if request.auth != null && request.auth.uid == resource.data.studentId; // Student can mark as read
    }

  }
}

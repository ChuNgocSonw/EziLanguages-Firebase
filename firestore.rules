rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isStudent(userId) {
      return getUserRole(userId) == 'student';
    }

    function isTeacher(userId) {
      return getUserRole(userId) in ['teacher', 'admin', 'superadmin'];
    }

    function isAdmin(userId) {
      return getUserRole(userId) in ['admin', 'superadmin'];
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users Collection
    match /users/{userId} {
      allow read: if isAdmin(request.auth.uid) || isTeacher(request.auth.uid) || request.auth.uid == userId;
      allow create: if isSignedIn();
      allow update: if isAdmin(request.auth.uid) || isTeacher(request.auth.uid) || request.auth.uid == userId;
      allow list: if isSignedIn();
    }

    // Classes Collection
    match /classes/{classId} {
      allow read, write: if isTeacher(request.auth.uid);
    }

    // Assignments Collection
    match /assignments/{assignmentId} {
      allow read: if isTeacher(request.auth.uid) || (isStudent(request.auth.uid) &&
        { 'classId': get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId, 'className': get(/databases/$(database)/documents/classes/$(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId)).data.className }
        in resource.data.assignedClasses);
      allow write: if isTeacher(request.auth.uid);
    }

    // Feedback Collection
    match /feedback/{feedbackId} {
      allow read, delete: if (isTeacher(request.auth.uid) && resource.data.teacherId == request.auth.uid) || (isStudent(request.auth.uid) && resource.data.studentId == request.auth.uid);
      allow create: if isTeacher(request.auth.uid);
      allow update: if isStudent(request.auth.uid) && request.auth.uid == resource.data.studentId && request.resource.data.isRead == true && resource.data.diff(request.resource.data).affectedKeys().hasOnly(['isRead']);
      allow list: if isTeacher(request.auth.uid);
    }
    
    // Quiz History & Assignment Attempts Subcollections
    match /users/{userId}/{subcollection}/{attemptId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Chats Subcollection
    match /users/{userId}/chats/{chatId} {
        allow read, write, delete: if request.auth.uid == userId;
    }
    match /users/{userId}/chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth.uid == userId;
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isStudent() {
      return getUserRole() == 'student';
    }

    function isTeacher() {
      return getUserRole() == 'teacher';
    }

    function isAdmin() {
      return getUserRole() == 'admin' || getUserRole() == 'superadmin';
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isSignedIn() {
      return request.auth != null;
    }

    // Admin and Super Admin have all access
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    match /users/{userId} {
      allow read: if isSignedIn();
      allow update: if request.auth.uid == userId;
    }

    match /classes/{classId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isTeacher() && resource.data.teacherId == request.auth.uid;
    }

    match /assignments/{assignmentId} {
      allow read: if isTeacher() || (isStudent() && (
        {
          'classId': get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId,
          'className': get(/databases/$(database)/documents/classes/$(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId)).data.className
        } in resource.data.assignedClasses
      ));
      allow create, update, delete: if isTeacher() && resource.data.teacherId == request.auth.uid;
    }

    // This rule allows teachers to query the entire feedback collection
    match /feedback/{documents=**} {
      allow list: if isTeacher();
    }

    match /feedback/{docId} {
      allow read: if (isTeacher() && resource.data.teacherId == request.auth.uid) || 
                      (isStudent() && resource.data.studentId == request.auth.uid);
      allow create: if isTeacher();
      allow update(markRead): if isStudent() && request.resource.data.isRead == true;
      allow delete: if isTeacher() && resource.data.teacherId == request.auth.uid;
    }
  }
}
